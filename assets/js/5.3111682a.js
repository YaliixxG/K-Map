(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{177:function(s,t,a){s.exports=a.p+"assets/img/jzjs.6d4fbd3f.png"},178:function(s,t,a){s.exports=a.p+"assets/img/jzfx.723fb330.png"},179:function(s,t,a){s.exports=a.p+"assets/img/jzzh.ccde587e.jpg"},180:function(s,t,a){s.exports=a.p+"assets/img/jzzh2.83a9e797.png"},181:function(s,t,a){s.exports=a.p+"assets/img/ms.3cf805e7.png"},249:function(s,t,a){"use strict";a.r(t);var r=[function(){var s=this,t=s.$createElement,r=s._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"基础内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基础内容","aria-hidden":"true"}},[s._v("#")]),s._v(" 基础内容")]),s._v(" "),r("h3",{attrs:{id:"计算机的进制有哪些？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机的进制有哪些？","aria-hidden":"true"}},[s._v("#")]),s._v(" 计算机的进制有哪些？")]),s._v(" "),r("ul",[r("li",[s._v("二进制 （计算机的数制）")]),s._v(" "),r("li",[s._v("十进制 （人类的数制）")]),s._v(" "),r("li",[s._v("八进制 （用于中和沟通人与计算机之间的数制）")]),s._v(" "),r("li",[s._v("十六进制 （用于中和沟通人与计算机之间的数制）")])]),s._v(" "),r("h3",{attrs:{id:"重要概念-位值（权值）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重要概念-位值（权值）","aria-hidden":"true"}},[s._v("#")]),s._v(" 重要概念 位值（权值）")]),s._v(" "),r("p",[s._v("由位值决定数值大小的值")]),s._v(" "),r("h3",{attrs:{id:"如何来计算进制？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何来计算进制？","aria-hidden":"true"}},[s._v("#")]),s._v(" 如何来计算进制？")]),s._v(" "),r("ul",[r("li",[s._v("把其它进制转成十进制")])]),s._v(" "),r("blockquote",[r("p",[s._v("任何一个数值，都是各位数字本身的值与其权之积的总和。")])]),s._v(" "),r("p",[r("img",{attrs:{src:a(177),alt:"进制计算"}}),r("br"),s._v(" "),r("img",{attrs:{src:a(178),alt:"进制详解"}})]),s._v(" "),r("ul",[r("li",[s._v("把十进制转成其它进制")])]),s._v(" "),r("blockquote",[r("p",[s._v("十进制整数精确转换成二进制整数：不断除以基数（2， 8， 16），倒序取余数")])]),s._v(" "),r("p",[s._v("例如：十进制整数精确转换成二进制整数：\n"),r("img",{attrs:{src:a(179),alt:"进制详解"}})]),s._v(" "),r("blockquote",[r("p",[s._v("十进制小数转换成二进制小数：不断乘以基数2，正序取整数部分进位，一直到小数点后为0才是最精确的\n例如：十进制小数转换成二进制小数：\n"),r("img",{attrs:{src:a(180),alt:"进制详解"}})])]),s._v(" "),r("p",[s._v("整数转换可以精确转换，小数做不到完全精确转换")]),s._v(" "),r("h3",{attrs:{id:"机器数、真值与模"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#机器数、真值与模","aria-hidden":"true"}},[s._v("#")]),s._v(" 机器数、真值与模")]),s._v(" "),r("ul",[r("li",[s._v("机器数： （含符号）数在机器中的编码表示")]),s._v(" "),r("li",[s._v("真值：机器数所对应的真实数值，一般用十进制数形式")]),s._v(" "),r("li",[s._v("模数：计数器从”0“开始计数，所能计的数值的个数（基数的n次方）即模数")])]),s._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[s._v("    模数 "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 最大值 "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),r("p",[r("img",{attrs:{src:a(181),alt:"模数"}})]),s._v(" "),r("p",[s._v("其实溢出的则是这个模数")]),s._v(" "),r("h3",{attrs:{id:"逻辑运算"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算","aria-hidden":"true"}},[s._v("#")]),s._v(" 逻辑运算")]),s._v(" "),r("ul",[r("li",[s._v("真：1，假：0")]),s._v(" "),r("li",[s._v("逻辑值：\n"),r("ol",[r("li",[s._v("”与“：只有两个值都为真时，才能为真。相当于乘法。")])]),s._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 有一个为假，则为假 */")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \n"),r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 两个值都为真，则为真 */")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" \n")])])]),r("ol",{attrs:{start:"2"}},[r("li",[s._v("”或“：只要有一个值为真，则为真。相当于加法。")])]),s._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 有一个为真，则为真 */")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" \n"),r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 两个值都为假，才为假 */")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \n")])])]),r("ol",{attrs:{start:"3"}},[r("li",[s._v("”非“：取反，值为真，则结果为假；值为假，则结果为真。")]),s._v(" "),r("li",[s._v("”异或“：两值\b相异为真，两值相同为假。")])]),s._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  \n"),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  \n"),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  \n"),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])])])])])}],e=a(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},r,!1,null,null,null);t.default=n.exports}}]);