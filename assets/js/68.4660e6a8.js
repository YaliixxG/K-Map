(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{298:function(e,t,a){"use strict";a.r(t);var r=a(0),c=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"hwebpack的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hwebpack的优化","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("font",{attrs:{color:"#8B892B"}},[e._v("Hwebpack的优化")])],1),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"预编译资源模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预编译资源模块","aria-hidden":"true"}},[this._v("#")]),this._v(" 预编译资源模块")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("在项目中经常会引入一些"),a("code",[e._v("第三方库")]),e._v("，而这些第三方库不是会经常更新的，所以可以在第一次打包时，将这些第三方库进行打包，后续如果不是升级这些库的情况下，让webpack不再对此进行打包处理，提高打包速度。这就是预编译资源模块。"),a("br"),e._v("\n可以使用"),a("code",[e._v("DllPlugin")]),e._v("，"),a("code",[e._v("DllReferencePlugin")]),e._v("插件来实现。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"利用缓存提升二次构建速度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用缓存提升二次构建速度","aria-hidden":"true"}},[this._v("#")]),this._v(" 利用缓存提升二次构建速度")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("对于静态文件，一些公共文件，可以利用缓存来提高二次编译速度。"),a("br"),e._v("\n使用"),a("code",[e._v("babel-loader")]),e._v("，"),a("code",[e._v("cache-loader")]),e._v("， "),a("code",[e._v("hard-source-webpack-plugin")]),e._v("来实现")])}],!1,null,null,null);t.default=c.exports}}]);