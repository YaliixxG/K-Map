(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{198:function(t,n,e){t.exports=e.p+"assets/img/CallStack.1b433de6.png"},278:function(t,n,e){"use strict";e.r(n);var a=[function(){var t=this.$createElement,n=this._self._c||t;return n("h4",{attrs:{id:"什么是调用帧？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是调用帧？","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是调用帧？")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h4",{attrs:{id:"什么是调用栈？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是调用栈？","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是调用栈？")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("假设有几个函数：functionA、functionB、functionC、functionD，然后逻辑是functionA调用functionB，functionB又调用functionC，functionC又调用functionD。则在functionD运行的时候，我们可以通过调用栈看到调用functionD的那几个函数是谁。"),n("br"),this._v("\n根据调用顺序形成的调用帧，这四个函数形成了一个调用栈，最后被调用的函数放在栈顶，而最先被调用的函数放在栈底部，这就是调用栈（call stack）。")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("img",{attrs:{src:e(198),alt:"调用顺序和调用栈"}})])},function(){var t=this.$createElement,n=this._self._c||t;return n("h4",{attrs:{id:"查看调用栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看调用栈","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看调用栈")])}],r=e(0),s=Object(r.a)({},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"调用栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调用栈","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("font",{attrs:{color:"#808000"}},[t._v("调用栈")])],1),t._v(" "),t._m(0),t._v(" "),e("p",[t._v('函数调用会在内存形成一个"调用记录"，又称"调用帧"（call frame），用于保存调用位置和内部变量等信息。')]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),e("p",[t._v("在debug面板 - sources - Call Stack")])])},a,!1,null,null,null);n.default=s.exports}}]);