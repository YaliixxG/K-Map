(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{258:function(t,e,s){"use strict";s.r(e);var r=s(0),_=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"哈希表（散列表）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈希表（散列表）","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("font",{attrs:{color:"#32CD32"}},[t._v("哈希表（散列表）")])],1),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("如果一家面包店，有各种面包名字，当顾客来问服务员Lucy，某种面包价格时：")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"怎么理解哈希表？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎么理解哈希表？","aria-hidden":"true"}},[this._v("#")]),this._v(" 怎么理解哈希表？")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("哈希表其实很多语言都已经内置实现了，例如"),s("code",[t._v("python")]),t._v("中的"),s("code",[t._v("dict()")]),t._v("字典就是哈希表。"),s("br"),t._v("\n在"),s("code",[t._v("js")]),t._v("中比较类似的是"),s("code",[t._v("object")]),t._v("对象。"),s("br"),t._v("\n就是可以通过键值对这种形式直接访问的数据结构。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("简单查找：Lucy会拿出一张记录了所有面包种类，以及价格的表，从第一个开始去查找。 时间复杂度为线性复杂度"),s("code",[t._v("O(n)")])]),t._v(" "),s("li",[t._v("二分查找：Lucy会拿出一张记录了所有面包种类，以及价格的表，但是这个表是有序的，按照字母的顺序来记录的。所以查找起来比简单查找要快的多 时间复杂度为对数复杂度"),s("code",[t._v("O(logn)")])]),t._v(" "),s("li",[t._v("哈希表：Lucy在脑海里一想直接张口就说出了价格。时间复杂度为常数复杂度"),s("code",[t._v("O(1)")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("哈希表就像数组一样，无论你获取第一个元素，还是你获取第十万个元素，复杂度都为"),e("code",[this._v("O(1)")]),this._v("，时间是一样的。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"哈希函数（散列函数）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#哈希函数（散列函数）","aria-hidden":"true"}},[this._v("#")]),this._v(" 哈希函数（散列函数）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("哈希函数就是无论你给的是什么数据，都会返回给你一个数字。 （将输入映射到数字）"),e("br"),this._v("\n虽然你单独看哈希函数返回的数字没有什么规律，但是它一定满足下列规律：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("每次你输入同一个数据时，返回的数字一定是一样的。也就是你输入“年轮面包”，返回给你14，你再一次输入“年轮面包”，返回给你的还是14")]),this._v(" "),e("li",[this._v("不同的输入映射应当返回的是不同的数字。如果你输入不同的数字都返回给你数字1，那这个哈希函数是有问题的。")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"milk"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 牛奶对应3.5元")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sugar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 糖对应2.5元")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"water"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 水对应2元")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"冲突"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#冲突","aria-hidden":"true"}},[this._v("#")]),this._v(" 冲突")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当你的内存有五个格子给你放5个键值，但是你却有10个键值需要存放，此时就会出现冲突，最理想的情况每个格子也要存放两个键值。"),e("br"),this._v("\n第一个格子先存了牛奶，结果苹果也要存在这个位置，就会导致覆盖掉牛奶的数据了。\n此时可以在第一个位置存放一个链表，牛奶和苹果都存放在这个位置，查询时，可以通过查找这个位置的链表来进行查询。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("理想的"),e("code",[this._v("哈希函数")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("可以将键均匀的映射到哈希表的不同位置，不让值扎堆，导致大量冲突")]),this._v(" "),e("li",[this._v("哈希表存储的链表不应该很长，如果很长，哈希表的查找速度也会急剧下降。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"哈希表的应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#哈希表的应用","aria-hidden":"true"}},[this._v("#")]),this._v(" 哈希表的应用")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("查找"),s("br"),t._v("\n用于查找，速度非常快，只需输入你想查找的键值，则会返回给你与输入映射的值。\n我们平常的上网，例如网址"),s("code",[t._v("www.baidu.com")]),t._v("，它都会被转为一个唯一的IP地址，然后再进行访问。（DNS解析）")]),t._v(" "),s("li",[t._v("防止重复"),s("br"),t._v("\n嗯... 这个就是你通过建立一个哈希表，来快速知道，你输入的这个键值是否映射的数据")]),t._v(" "),s("li",[t._v("缓存"),s("br"),t._v("\n平常我们浏览网页，如果是我们经常浏览的，很有可能访问的就是缓存的数据。这样可以速度更快的处理响应，返回给你这个网页。"),s("br"),t._v("\n就像问一个小学生，6*7等于多少？他前几次可能需要查九九乘法表来找到答案，但是当他查询次数多了以后就记住了这个值，你再次问的时候，他能快速回答42。"),s("br"),t._v("\n就像百度，很多用户高频率访问的网页会缓存下来，当用户输入这个网址时，就不必请求服务器，再让服务器返回一个网页内容给你了。而是直接在缓存中拿出来展示给你。"),s("br"),t._v(" "),s("em",[t._v("缓存是一种常用的加速方式，所有大型网站都是用缓存，而缓存的数据则存储在哈希表中")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"填装因子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#填装因子","aria-hidden":"true"}},[this._v("#")]),this._v(" 填装因子")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("填装因子的计算：哈希表包含的元素个数 / 哈希表位置总数"),e("br"),this._v("\n哈希表是用数组来实现的，如果创建一个长度10的数组，但是只放入了5个元素，则填装因子为0.5"),e("br"),this._v("\n填装因子越低，哈希表性能越好\n所以一般当填装因子超过"),e("code",[this._v("0.7")]),this._v("时，需要扩充数组的长度")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("可以用数组和哈希函数创建哈希表")]),t._v(" "),s("li",[t._v("哈希函数一定要最大限度的减少冲突")]),t._v(" "),s("li",[t._v("哈希表的查找，删除，插入的速度都非常快")]),t._v(" "),s("li",[t._v("哈希表可以模拟映射")]),t._v(" "),s("li",[t._v("当填装因子超过"),s("code",[t._v("0.7")]),t._v("时，需要扩充数组的长度")]),t._v(" "),s("li",[t._v("哈希表可以用来缓存数据")]),t._v(" "),s("li",[t._v("非常适合防止重复")])])}],!1,null,null,null);e.default=_.exports}}]);