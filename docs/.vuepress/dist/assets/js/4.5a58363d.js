(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{201:function(t,s,a){t.exports=a.p+"assets/img/ncxl1.af808c0c.png"},202:function(t,s,a){t.exports=a.p+"assets/img/ncxl2.1f6090a8.png"},203:function(t,s,a){t.exports=a.p+"assets/img/ncxl3.8391af45.png"},204:function(t,s,a){t.exports=a.p+"assets/img/ncxl4.b12dba84.png"},205:function(t,s,a){t.exports=a.p+"assets/img/ncbxl.f21afefb.png"},206:function(t,s,a){t.exports=a.p+"assets/img/ncxl.f204b25b.png"},289:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"什么是内存泄露？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是内存泄露？","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是内存泄露？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制","aria-hidden":"true"}},[this._v("#")]),this._v(" 垃圾回收机制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("垃圾回收机制是最常用的是根据"),s("code",[this._v("引用表")]),this._v("来判断这个内存是否需要回收的。语言引擎里面有一张引用表，用来保存内存里面所有资源的引用次数。如果一个值的引用次数为"),s("code",[this._v("0")]),this._v("，则证明这个值不再被用到了，则可以将这块内存释放。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("但是有许多值明明不再引用，但是引用数却不为0，导致垃圾回收机制无法释放这块内存，导致内存泄露。"),s("br"),this._v("\n例如：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量arr的引用次数为1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'内存泄露'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("但是若是将arr指向"),s("code",[this._v("null")]),this._v("，将引用指针为空，解除引用，垃圾回收机制则可释放内存。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'内存泄露'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\narr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量arr的引用次数为0")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"在chorme浏览器中如何查看内存泄露？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在chorme浏览器中如何查看内存泄露？","aria-hidden":"true"}},[this._v("#")]),this._v(" 在Chorme浏览器中如何查看内存泄露？")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("打开控制面板，选择Performance")]),t._v(" "),a("li",[t._v("勾选 memory")]),t._v(" "),a("li",[t._v("点击左上角录制按钮（record）")]),t._v(" "),a("li",[t._v("模拟用户操作程序")]),t._v(" "),a("li",[t._v("一段时间后，点击 stop 按钮")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如图："),s("br"),this._v(" "),s("img",{attrs:{src:a(201),alt:"内存泄露1"}}),s("br"),this._v(" "),s("img",{attrs:{src:a(202),alt:"内存泄露2"}}),this._v(" "),s("img",{attrs:{src:a(203),alt:"内存泄露3"}}),this._v(" "),s("img",{attrs:{src:a(204),alt:"内存泄露4"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("内存不存在泄露情况："),s("br"),this._v(" "),s("img",{attrs:{src:a(205),alt:"内存不泄露"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("内存泄露情况："),s("br"),this._v(" "),s("img",{attrs:{src:a(206),alt:"内存泄露"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"服务器环境下查看内存泄露"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器环境下查看内存泄露","aria-hidden":"true"}},[this._v("#")]),this._v(" 服务器环境下查看内存泄露")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("conosle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("memoryUsage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    rss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27709440")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有内存占用，包括指令区和堆栈")]),t._v("\n    heapTotal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5685248")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "堆"占用的内存，包括用到的和没用到的')]),t._v("\n    heapUsed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3449392")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用到的堆的部分")]),t._v("\n    external"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8772")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// V8 引擎内部的 C++ 对象占用的内存")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("判断内存泄漏，以"),s("code",[this._v("heapUsed")]),this._v("字段为准。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"如何避免内存泄露"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何避免内存泄露","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何避免内存泄露")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("减少不必要的全局变量")]),this._v(" "),s("li",[this._v("使用完数据后，及时解除应用（闭包中的变量，dom引用，定时器清除）")]),this._v(" "),s("li",[this._v("避免死循环，造成浏览器卡顿、崩溃的问题")])])}],e=a(0),r=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"内存泄露"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("font",{attrs:{color:"#FF6347"}},[t._v("内存泄露")])],1),t._v(" "),t._m(0),t._v(" "),a("p",[t._v("程序的运行需要内存。若程序提出要求时，操作系统或者在运行的时候就必须要提供内存供其运行。但是对于持续性的服务进程，如果不及时释放不再使用的内存，内存占用就会越来越高，影响系统性能，从而导致程序崩溃。")]),t._v(" "),a("blockquote",[a("p",[t._v("对于不再使用到内存，没有得到及时的释放，这个就叫"),a("font",{attrs:{color:"#FF6347"}},[t._v("内存泄露")])],1)]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("现在许多语言都有垃圾回收机制，不需要程序员自己手动清除内存。")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),a("p",[t._v("上面的变量arr其实在后面的代码中并没有被使用，但是却因为[1, 2, 3, 4]是一个值，所以变量arr的引用次数为1，垃圾回收机制并不会释放这个内存，即使没有使用也会持续占用内存。")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),a("p",[t._v("面板会显示这段时间的内存占用情况")]),t._v(" "),t._m(9),t._v(" "),a("p",[t._v("如果内存占用基本平稳，没有大波动，接近水平，则说明没有内存泄露；反之，则是内存泄露了。")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),a("p",[t._v("使用Node提供的process.memoryUsage方法查看内存情况")]),t._v(" "),t._m(13),a("p",[t._v("这个方法会返回一个对象")]),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17)])},n,!1,null,null,null);s.default=r.exports}}]);