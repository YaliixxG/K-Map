(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{221:function(t,s,e){t.exports=e.p+"assets/img/gxt.e25dac89.png"},222:function(t,s,e){t.exports=e.p+"assets/img/qqt1.f54c5216.png"},223:function(t,s,e){t.exports=e.p+"assets/img/qqt2.d5db1ede.png"},224:function(t,s,e){t.exports=e.p+"assets/img/qqt3.46ce845e.png"},225:function(t,s,e){t.exports=e.p+"assets/img/qqt4.2ad6ca28.png"},226:function(t,s,e){t.exports=e.p+"assets/img/McCabe.e2939539.png"},227:function(t,s,e){t.exports=e.p+"assets/img/umlhdt.20a6e17f.png"},228:function(t,s,e){t.exports=e.p+"assets/img/pxecs.68280542.png"},229:function(t,s,e){t.exports=e.p+"assets/img/hdt.dda2ea4d.jpg"},230:function(t,s,e){t.exports=e.p+"assets/img/dyscc.74943ae0.png"},231:function(t,s,e){t.exports=e.p+"assets/img/huffman.8aa73a9d.png"},232:function(t,s,e){t.exports=e.p+"assets/img/huffman1.9db109f4.jpg"},305:function(t,s,e){"use strict";e.r(s);var _=[function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("移位运算符就是在二进制的基础上对数字进行平移\n\n    << 左移\n    >> 右移\n    >>> 无符号右移\n\n在数字没有溢出的情况下，无论正数负数，左移 n 位相当于乘以 2 的 n 次方\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("内存按字节编址，从 A1000H 到 B13FFH 的区域的存储容量为（ ）KB")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("h - 代表十六进制\nd - 代表十进制\nb - 代表二进制\n\nB13FFH，A1000H 为十六进制数\n求差：B13FF - A1000 = 103FF\n单位转换：103FF / 1024 = 65\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("HTTPS = HTTP + SSL")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("端口扫描器通过远程 TCP/IP 不同的端口的服务，并记录目标给予的回答，通过这种方法，可以搜集到很多关于目标主机的各种有用的信息\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("软件著作权人享有：\na. 发表权\nb. 开发者身份权： 不随软件开发者的消亡而丧失，且无时间限制\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("在中国不享有专利权，因此，不能禁止他人在中国 制造、使用、销售、进口、许诺销售。\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("使用 150DPI 的扫描分辨率扫描一幅 3×4 英寸的彩色照片，得到原始的 24 位真彩色图像的数据量是（ ）Byte。")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("DPI：扫描分辨率单位，是多功能一体机在实现扫描功能时，通过扫描元件将扫描对象每英寸可以被表示成的点数。它的表示方式是用垂直分辨率和水平分辨率相乘表示。\n\n150DPI：相当于 150 * 150dpi 表示每英寸水平分辨率为 150点，垂直分辨率为150 点。\n\n总像素 = 3 * 4 * 150 * 150\n数据量（bit）= 总像素 * 24\n单位转换（byte）= 数据量（bit）/ 8\n\n答案： 3 * 4 * 150 * 150 * 24 / 8\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("关于解释程序，编译程序，汇编程序：\n\n汇编程序（为低级服务）是将汇编语言书写的源程序翻译成由机器指令和其他信息组成的目标程序。\n解释程序（为高级服务）直接执行源程序或源程序的内部形式，一般是读一句源程序，翻译一句，执行一句，不产生目标代码\n编译程序（为高级服务）是将高级语言书写的源程序翻译成与之等价的低级语言的目标程序\n\n解释：程序运行时，取一条指令，将其换化为机器指令，再执行这条机器指令。（同声翻译）\n编译：程序运行时之前，将程序的代码编译成机器代码，再运行这个程序。 （全文翻译）生成中间代码，代码优化\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("每个三地址码指令，都可以被分解为四个元组（4-tuple）：（运算符，运算对象1，运算对象2，结果）。因为每个陈述都包含了三个变量，所以它被称为三地址码\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("输入输出对于PC来说，就是中断、DMA方式为主，鼠标键盘就是中断方式。\n\nDMA(直接存储器访问) 是所有现代电脑的重要特色，它允许不同速度的硬件装置来沟通，而不需要依赖于 CPU 的大量中断负载。\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("当用户双击一个文件名时，Windows系统通过建立的文件关联来决定使用什么程序打开该文件。例如系统建立了记事本或写字板;程序打开扩展名为.TXT的文件关联，那么当用户双击Wang.TXT文件时，Windows先执行记事本或写字板程序，然后打开Wang．TXT文件\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("某磁盘有 100 个磁道，磁头从一个磁道移至另一个磁道需要 6ms。文件在磁盘上非连续存放，逻辑上相邻数据块的平均距离为 10 个磁道，每块的旋转延迟时间及传输时间分别为 100ms 和 20ms，则读取一个 100 块的文件需要（ ）ms。")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("\b滑到相邻逻辑块的时间为 T1 = 6 * 10\n读取与传输时间 T2 = 100 + 20\n\b滑到目标块以及读取总共时间为 T1 + T2\n则 100 块的时间 T = 100 * （T1 + T2）\n\n\b答案：100 * （6 * 10 + 100 +20）\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("若用 PV 操作控制进程 P1、P2、P3、P4 和 P5 并发执行的过程，则需要设置 5 个信号 S1、S2、S3、S4 和 S5，且信号量 S1 ～ S5 的初值都等于零。下图中 a 和 b 处应分别填（ ）；c 和 d 处应分别填写（ ）；e 和 f 处应分别填写（ ）。")]),this._v(" "),s("p",[s("img",{attrs:{src:e(222),alt:"前趋图"}}),s("br"),this._v(" "),s("img",{attrs:{src:e(223),alt:"前趋图"}})]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("解题要点：\n\n在第一张图上\na. 先将信号按照从上至下，从左至右标记出来\nb. 记住一个准则：在进程开始端始终为\b V()，结束端始终为 P()\n\n在第二张图上\nc. 下层部分都是 V()开始，上层部分都为\b P()结束\nd. 再根据前面的准则进行判断，即可得出答案\n")])])]),s("p",[s("img",{attrs:{src:e(224),alt:"前趋图"}}),this._v(" "),s("img",{attrs:{src:e(225),alt:"前趋图"}})])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("li",[t._v("内容耦合：\n"),e("ul",[e("li",[t._v("一个模块直接访问另一个模块的内部数据")]),t._v(" "),e("li",[t._v("一个模块不通过正常入口转到另一模块内部")]),t._v(" "),e("li",[t._v("两个模块有一部分程序代码重迭(只可能出现在汇编语言中)")]),t._v(" "),e("li",[t._v("一个模块有多个入口")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("li",[t._v("优点\n"),e("ul",[e("li",[t._v("解决问题的多方法性")]),t._v(" "),e("li",[t._v("具有可更改性和可维护性")]),t._v(" "),e("li",[t._v("有可重用的 \b 知识源")]),t._v(" "),e("li",[t._v("支持容错性和健壮性")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("仓库风格包括：\n"),s("ul",[s("li",[this._v("数据库系统")]),this._v(" "),s("li",[this._v("黑板系统")]),this._v(" "),s("li",[this._v("超文本系统")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("li",[e("p",[t._v("关于测试策略：")]),t._v(" "),e("ul",[e("li",[t._v("\b 三明治：自顶向下和自底向上两种 \b 方式的结合\n"),e("ul",[e("li",[t._v("优点：\n"),e("ul",[e("li",[t._v("较早地验证了主要的控制和判断点")]),t._v(" "),e("li",[t._v("较早的验证给 \b 了底层模块")]),t._v(" "),e("li",[t._v("测试的并行程度较高")])])])])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("采用 McCabe 度量法计算下图所示程序的环路复杂性为（ ）")]),this._v(" "),s("p",[s("img",{attrs:{src:e(226),alt:"McCabe"}})]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("解题要点：\n\n套公式 复杂性 = \b\b节点之间边数（m）- 节点数（n）+ 2\n\n答案：11 - 10 + 2 = 3\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("封装：信息隐藏，是指利用抽象数据类型将数据和基于数据的操作封装在一起，使其构成一个不可分割的独立实体，数据被保护在抽象数据类型的内部，尽可能地隐藏内部的细节，只保留一些对外接口使之与外部发生联系。\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("参与者：指存在于系统外部并直接与系统进行交互的人、系统、子系统或类的外部实体的抽象\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("关于 UML 图的判断：")]),this._v(" "),s("p",[s("img",{attrs:{src:e(227),alt:"McCabe"}})])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Facade（外观）模式：为子系统中的各类（或结构与方法）提供一个简明一致的界面，隐藏子系统的复杂性，使子系统更加容易使用。它是为子系统中的一组接口所提供的一个一致的界面。\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("观察者模式：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("享元模式提供支持大量细粒度对象共享的有效方法\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("\b 传值与传址（传引用）的区别：")]),this._v(" "),s("ul",[s("li",[this._v("在传值中函数参数压栈的是参数的副本，任何的修改是在副本上作用，没有作用在原来的变量上")]),this._v(" "),s("li",[this._v("传址中压栈的是指针变量的副本，当你对指针解指针操作时，其值是指向原来的那个变量，所以对原来变量操作")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("数据库的“三级模式”：\n\n概念模式（也称模式）：是数据库中全部数据的逻辑结构和特征的描述，由若干个概念记录类型组成，只涉及型（对某一数据的结构和属性的说明）的描述，不涉及具体的值（具体赋值）\n\n外模式（也称用户模式，子模式）：是用户与数据库系统的接口，是用户用到的那部分数据的描述，由若干个外部记录类型组成。用户使用数据操纵语言对数据库进行操作，实际上是对外模式的外部记录进行操作\n\n内模式（也称存储模式）：是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式，定义所有的内部记录类型、索引和文件的组织方式，以及数据控制方面的细节\n\n总之，数据按外模式的描述提供给用户，按内模式的描述存储在磁盘上，而概念模式提供了连接这两级模式的相对稳定的中间层，并使得两级中任意一级的改变都不受另一级影响\n\n数据库系统在三级模式之间提供了“两级映像”：\n\n模式/内模式映像：存在于概念级和内部级之间，实现了概念模式与内模式之间的相互转换\n外模式/模式映像：存在于外部级和概念级之间，实现了外模式与概念模式之间的相互转换\n\n正因为这两级映像，才保证了数据库中的数据具有较高的逻辑独立性和物理独立性\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("数据库设计中规范化是在逻辑设计阶段进行的一项工作，该工作负责把关系模式进行规范，以减少冗余，以及一定程度上消除修改异常，插入异常及删除异常\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("解题要点：\na. 先将关系图画出\nb. 再根据入度，或者组合看是否可以\b得出所有关系\nc. 如果可以推出所有关系，则可以确定候选键\nd. 关键字的那几个就是主属性\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("设有二叉排序树（或二叉查找树）如下图所示，建立该二叉树的关键码序列不可能是（ C ）")]),this._v(" "),s("p",[s("img",{attrs:{src:e(228),alt:"关系图"}})])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("FTP协议占用两个标准的端口号：20和21，其中20为数据口，21为控制口\n\nFTP（File Transfer Protocol，文件传输协议） 是 TCP/IP 协议组中的协议之一。FTP协议包括两个组成部分，其一为FTP服务器，其二为FTP客户端。\n\nFTP服务器用来存储文件，用户可以使用 FTP 客户端通过 FTP 协议访问位于 FTP 服务器上的资源。\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("查错误时，使用由近及远的原则意味着先要确认本机协议栈有没有问题，所以可以用ping127.0.0.1来检查本机TCP/IP协议栈，能PING通，说明本机协议栈无问题\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("已知 IP 地址为 193.6.7.0，求子网掩码 \b 以及默认网关，默认广播地址。")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("解：\na. 先\b判断 IP 地址是哪一个分类？\n\nA类地址：网络号 8 位，主机号 24 位\n1.0.0.0 到126.0.0.0\n0.0.0.0 和127.0.0.0保留\n\nB 类地址：网络号 16 位，主机号 16 位\n128.1.0.0到191.254.0.0\n128.0.0.0和191.255.0.0保留\n\nC 类地址：网络号 24 位，主机号 8 位\n192.0.1.0 到223.255.254.0\n192.0.0.0和223.255.255.0保留\n\nD 类地址\n224.0.0.0到239.255.255.255用于多点广播\n\nE 类地址\n240.0.0.0到255.255.255.254保留\n255.255.255.255用于广播\n\n所以得知 193.6.7.0为 C 类\b地址\n\nb. 根据类别得 C 类网络号为 24 位，主机号为 后 8 位，将网络号全部设为 1，主机号\b设为 0 则得到子网掩码\n11111111.11111111.11111111.00000000 => 255.255.255.0\n（注意如果IP地址为 193.6.7.0/26，则是告诉你网络前缀为 26 位，则只有后 6 位才是主机号，则子网掩码为11111111.11111111.11111111.11000000）\n\nc. 默认网关就是将IP地址的主机位除了最后一位，其它全部置为 1\n193.6.7.11111110 => 193.6.7.254\n\nd. 默认广播地址是将IP地址的主机位全部置为 1\n193.6.7.11111111 => 193.6.7.255\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("指令和数据是都存储在内存中，传统计算机CPU在执行过程中根据指令周期的不同阶段来区分是指令还是数据，取指周期取出的是指令，执行周期取出的是数据\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("程序计数器是用于存放下一条指令所在单元的地址。当执行一条指令时，处理器首先需要从程序计数器中取出指令在内存中的地址，通过地址总线寻址获取\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("如果浮点数的阶码(包括 1 位阶符)用 R 位的称码表示，尾数(包括 1 位数符)用 M 位的补码表示，则浮点数表示的数值范围如下：")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("最大正数: $(1-2^{-M+1}) * 2^{{2^{R-1}-1}}$\n最小负数：$-1 * 2^{{2^{R-1}-1}}$\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("已知数据信息为 16 位，最少应附加（ ）位校验位，以实现海明码纠错"),s("br"),this._v("\n海明校验码公式：")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("$2^r {\\geq} x + r + 1$\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("其中 r 为校验码位数， x 为信息位位数\n所以 数据位为 16 位时，需要 r = 5 位校验位\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("将一条指令的执行过程分解为取指、分析和执行三步，按照流水方式执行，若取指时间 t 取指=4△t、分析时间 t 分析=2△t、执行时间 t 执行=3△t，则执行完 100 条指令，需要的时间为（ ）△t")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("需要时间 = 一条指令完整时间 + 剩余指令条数 * \b周期\n周期为耗时最多的流程时间\n\n答案：T = 4△t + 2△t + 3△t + (100-1) * 4△t = 405△t\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("关于加密算法：")]),this._v(" "),s("ul",[s("li",[this._v("IDEA 算法和 RC4 算法都对称加密算法，只能用来进行数据加密。")]),this._v(" "),s("li",[this._v("MD5 算法是消息摘要算法，只能用来生成消息摘要无法进行数字签名。")]),this._v(" "),s("li",[this._v("RSA 算法是典型的非对称加密算法，主要具有数字签名和验签的功能（记忆要点 RSA => sign）")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("根据《中华人民共和国商标法》第三十八条：注册商标有效期满，需要继续使用的，应当在期满前六个月内申请续展注册。专利权和著作权到期后都无法延长，而商业秘密权无期限限制")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("在审查过程中，对于不同的申请人同日 （指申请日，有优先权的指优先权日） 就同样的发明创造分别提出专利申请，并且这两件申请符合授予专利权的其他条件的，应当根据专利法实施细则第四十一条第一款的规定，通知申请人自行协商确定申请人")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("按照商标法的规定，第 29 条，以及实施条例 19 条规定，同一天申请的，初步审定并公告使用在先的。驳回其他人的申请。均未使用获无法证明的，各自协商，不愿协商或者协商不成的，抽签决定，不抽签的，视为放弃")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("某软件项目的活动图如下图所示，其中顶点表示项目里程碑，连接顶点的边表示包含的活动，边上的数字表示相应活动的持续时间（天），则完成该项目的最少时间为（ ）天。活动 BC 和 BF 最多可以晚开始（ ）天而不会影响整个项目的进度")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("解题要点：\na. 先推算出最早完成时间\nb. 标记处关键路径\nc. 根据关键路径来推算活动的最晚开始时间，也就是工期\n\n最少时间 18 天\nBC 工期 = C 点最晚时间 - 前面工期 = 5 - 3 - 2 = 0\nBF 工期 = F 点 最晚时间 - 前面那工期 = 13 - 4 - 2 = 7\n")])])]),s("p",[s("img",{attrs:{src:e(229),alt:"活动图"}})])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("传值调用最显著的特征就是被调用的函数内部对形参的修改不影响实参的值\n引用调用是将实参的地址传递给形参，使得形参的地址就是实参的地址\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("硬实时要求在规定的时间内必须完成操作，这是在操作系统设计时保证的")]),this._v(" "),s("li",[this._v("软实时则只要按照任务的优先级，尽可能快地完成操作即可")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("假设段页式存储管理系统中的地址结构如下图所示，则系统最多可有（ ）个段，每个段的大小均为（ ）个页，页的大小为（ ）K")]),this._v(" "),s("p",[s("img",{attrs:{src:e(230),alt:"段页式存储"}})]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("根据图可求出：\n页内地址长度：12 - 0 + 1 = 13位（求出每一页的大小）\n页号地址长度：23 - 13 + 1 = 11 位（可求出最多有多少页）\n段号地址长度：31 - 24 + 1 = 8（可求出最多有多少段）\n")])])]),s("p",[this._v("答案： 系统最多有 $2^8 = 256$个段，每个段的大小 均为 $2^{11} = 2048$个页，每一页的大小为 $2^{13} {\\div} 8 {\\div} 1024 = 1k$，页总大小 $1 {\\times} 8 = 8k$")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("假设系统中有 n 个进程共享 3 台扫描仪，并采用 PV 操怍实现进程同步与互斥。若系统信号量 S 的当前值为-1，进程 P1、P2 又分别执行了 1 次 P（S）操作，那么信号量 S 的值应为（ ）。")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("当有进程运行时，其他进程访问信号量，信号量就会减 1。\nS = -1 - 2 = -3\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("某字长为 32 位的计算机的文件管理系统采用位示图（bitmap）记录磁盘的使用情况。若磁盘的容量为 300GB，物理块的大小为 1MB，那么位示图的大小为（ ）个字。")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("计算物理块的数量：300 * 1024 / 1 = 307200 （个）\n根据字长求出有多少字：307200 、 32 = 9600 （个）\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("对于较大型软件系统的需求往往难以在前期确定，所以瀑布模型最不适合")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("li",[e("p",[t._v("软件质量特性中的可移植性：")]),t._v(" "),e("ul",[e("li",[t._v("适应性")]),t._v(" "),e("li",[t._v("易安装性")]),t._v(" "),e("li",[t._v("共存性")]),t._v(" "),e("li",[t._v("易替换性")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("策略模式定义了一系列的算法，并将每一个算法封装起来，而且使它们还可以相互替换。策略模式让算法独立于使用它的客户而独立变化。应用场景：")]),this._v(" "),s("ul",[s("li",[this._v("多个类只区别在表现行为不同，在运行时动态选择具体要执行的行为")]),this._v(" "),s("li",[this._v("需要在不同情况下使用不同的策略算法，或者策略还可能在未来用其他方式来实现")]),this._v(" "),s("li",[this._v("对客户隐藏具体策略算法的实现细节，彼此完全独立")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时")]),this._v(" "),s("li",[this._v("当构造过程必须允许被构造的对象有不同表示时")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("二叉排序树：又称为二叉查找树。定义：或者是一颗空树，或者是具有下列性质的二叉树：")]),this._v(" "),s("ul",[s("li",[this._v("若左子树不空，则左子树上所有结点的值均小于它的根结点的值；")]),this._v(" "),s("li",[this._v("若右子树不为空，则右子树上所有的结点的值均大于或等于它的根结点的值；")]),this._v(" "),s("li",[this._v("左、右子树也分别为二叉排序树")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("下表为某文件中字符的出现频率，采用霍夫曼编码对下列字符编码，则字符序列“bee”的编码为（ ）；编码“110001001101”的对应的字符序列为（ ）。")]),this._v(" "),s("p",[s("img",{attrs:{src:e(231),alt:"huffman"}})]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("解题要点：\n画出哈夫曼树\na. 每次取最小的两个值按照左边 > 右边的规则进行排列\nb. 树画好后，从上至下，从左至右\b，按照 0，1来进行标记\nc. 随后可得出每个字母的编码\n")])])]),s("p",[s("img",{attrs:{src:e(232),alt:"huffman"}})]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("b: 101 e: 1101 bee: 10111011101\n110001001101 中：f(1100) a(0) c(100) e(1101)\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("URL 由三部分组成：协议类型，域名，路径及文件名\nhttp 为协议类型\nedu.abc.com 为域名，其中 edu 为主机名（服务器名称）\n/lecturer/index/user_id-8371666.html 为文件路径及文件名\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("对于多种不同的路由协议到一个目的地的路由信息，路由器首先根据管理距离决定相信哪一个协议")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("路由匹配最长原则：指存在多条目的网段相同的路由时,匹配掩码最长的那一条。因为掩码越长,表示的网段就越小,匹配也就越精确")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("机器字长为 n 位的二进制数可以用补码来表示（ ）个不同的有符号定点小数")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("补码本身就是有符号的，表示的数字中0是唯一的，无 +0 ，-0 之分，只有 0 和 1，所以有2 n 个不同的有符号定点小数\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("全相联：主存的任意一块可以映像到Cache中的任意一块，其特点是块冲突概率低，Cache空间利用率高，但是相联目录表容量大导致成本高、查表速度慢\n直接映像：主存的每一块只能映像到Cache的一个特定的块中，整个Cache地址与主存地址的低位部分完全相同，其特点是硬件简单，不需要相联存储器，访问速度快 (无须地址变换），但是Cache块冲突概率高导致Cache空间利用率很低\n组相联：对上述两种方式的折中处理，对Cache分组，实现组间直接映射，组内全相联，从而获得较低的块冲突概率、较高的块利用率，同时得到较快的速度和较低的成本\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("终端设备与远程站点之间建立安全连接的协议是 SSH")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("总线宽度为 32bit，时钟频率为 200MHz，若总线上每 5 个时钟周期传送一个 32bit 的字，则该总线的带宽为（ ）MB/s")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("总线带宽的计算公式为:总线带宽=总线数据传输频率 X 数据总线位数\n总线数据传输频率：200 / 5 = 40\n总线位数：32bit / 8  = 4 Byte\n带宽 = 40 * 4 = 160\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("王某是某公司的软件设计师，每当软件开发完成后均按公司规定编写软件文档，并提交公司存档。那么该软件文档的著作权应由公司享有")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("关于结构化设计方法：")]),this._v(" "),s("ul",[s("li",[this._v("概要设计阶段：软件体系结构的设计、数据设计和接口设计")]),this._v(" "),s("li",[this._v("详细设计阶段：数据结构和算法的设计")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("关于面向对象设计方法：")]),this._v(" "),s("ul",[s("li",[this._v("概要设计阶段：体系结构设计、初步的类设计/数据设计、结构设计")]),this._v(" "),s("li",[this._v("详细设计阶段：构件设计")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("风险暴露是一种量化风险影响的指标。\n风险暴露 = 风险影响 * 风险概率\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("程序运行时的用户内存空间一般划分为代码区、静态数据区、栈区和堆区，其中栈区和堆区也称为动态数据区。全局变量的存储空间在静态数据区。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("淘汰表中页号代价最小的页面是哪个？")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("根据局部性原理：\n先淘汰未被访问的页面（最近未被访问的页面下次被访问的概率更小），如果都被访问过则先淘汰未被修改过的页面（未修改过的页面内存与辅存一致，故淘汰时无须写回辅存，使系统页面置换代价小）\n")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("软件评审的内容包括设计质量评审、程序质量评审和与运行环境接口的评审。评审的主要目标是为了发现软件中的错误")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("li",[e("p",[t._v("关于面向对象技术开发系统：")]),t._v(" "),e("ul",[e("li",[t._v("面向对象分析：认定对象、组织对象、描述对象间的相互作用、定义对象的操作、定义对象的内部信息")]),t._v(" "),e("li",[t._v("面向对象设计：设计分析模型和实现相应源代码")]),t._v(" "),e("li",[t._v("面向对象程序设计：选择合适的面向对象程序设计语言，将程序组织为相互协作的对象集合，每个对象表示某个类的实例，类通过继承等关系进行组织")]),t._v(" "),e("li",[t._v("面向对象测试：尽可能早的开始进行系统测试，以发现系统中可能存在的错误并进行修复，进而保证系统质量")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("关于面向对象技术：")]),this._v(" "),s("ul",[s("li",[this._v("重载：一个类可以具有多个同名而参数类型列表不同的方法，每个方法实现自己的特定行为")]),this._v(" "),s("li",[this._v("重置/覆盖：对象协作过程中，对象给对象进行消息传递，通常通过方法调用进行。在继承关系中，子类重新定义父类中已经定义的方法")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("依赖（Dependency)是两个事物间的语义关系，其中一个事物（独立事物）发生变化会影响另一个事物（依赖事物）的语义。")]),this._v(" "),s("li",[this._v("关联（Association)是一种结构关系，它描述了一组链，链是对象之间的连接。")]),this._v(" "),s("li",[this._v("泛化（Generalization)是一种特殊/一般关系，特殊元素（子元素）的对象可替代一般元素（父元素）的对象，用这种方法，子元素共享了父元素的结构和行为。")]),this._v(" "),s("li",[this._v("实现（Realization)是类元之间的语义关系，其中一个类元指定了由另一个类元保证执行的契约。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("判断是否保持函数依赖，是根据原函数依赖集中的依赖关系是否在分解后的集中全部存在（不是根据关系去推，而是直面看是否存在，当然冗余的函数依赖可以去掉），不存在则没有保持函数依赖。")]),this._v(" "),s("li",[this._v("无损联接分解：指将一个关系模式分解成若干个关系模式后，通过自然联接和投影等运算仍能还原到原来的关系模式")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("判断是否为无损分解，将分解后的两个集合( A1,A2),( A1,A3)求交集得到 A1， 然后再将两个集合分别相减，也就是出去公共部分看还剩下什么。( A1,A2) - ( A1,A3) = A2,( A1,A3) - ( A1,A2) = A3; 若 A1 -> A2 或者 A1 -> A3 能成立一个则为无损分解，否则就为有损分解。此时可看出，两个都推不出，所以为有损分解")])])}],a=e(0),i=Object(a.a)({},function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"software-exam"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#software-exam","aria-hidden":"true"}},[t._v("#")]),t._v(" "),_("font",{attrs:{color:"#0004CD"}},[t._v("Software Exam")])],1),t._v(" "),_("ol",[_("li",[_("p",[t._v("VLIW："),_("font",{attrs:{color:"#f00"}},[t._v("超长指令字")]),t._v("(very long instruction word)")],1)]),t._v(" "),_("li",[_("p",[t._v("主存与 cache 的地址映射方式中"),_("font",{attrs:{color:"#f00"}},[t._v("全相联")]),t._v("方式可以实现主存任意一块装入 cache 中的任意位置...")],1)]),t._v(" "),_("li",[_("p",[t._v("移位指令中的"),_("font",{attrs:{color:"#f00"}},[t._v("左移一位")]),t._v("指令的操作结果相当于对操作数进行乘 2 操作")],1),t._v(" "),t._m(0)]),t._v(" "),t._m(1),t._v(" "),_("li",[_("p",[t._v("关于总线的说法：")]),t._v(" "),_("ul",[_("li",[t._v("并行总线适合近距离高速数据传输")]),t._v(" "),_("li",[t._v("串行总线适合长距离数据传输")]),t._v(" "),_("li",[t._v("专用总线在设计上可以与连接设备实现最佳匹配")]),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("单总线结构控制简单方便，控制方便，但由于所有设备部件均挂在单一总线上，只能分时工作，即同一时刻只能在两个设备间传送数据，传输效率和速度受到限制")])],1)])]),t._v(" "),t._m(2),t._v(" "),_("li",[_("p",[t._v("为了攻击远程主机，通常利用"),_("font",{attrs:{color:"#f00"}},[t._v("端口扫描")]),t._v("技术检测远程主机状态")],1),t._v(" "),t._m(3)]),t._v(" "),_("li",[_("p",[t._v("某软件公司参与开发管理系统软件的程序员张某，辞职到另一公司任职，于是该项目负责人将该管理系统软件上开发者的署名更改为李某（接张某工作）。该项目负责人的行为"),_("font",{attrs:{color:"#f00"}},[t._v("侵犯了张某开发者身份权（署名权）")])],1),t._v(" "),t._m(4)]),t._v(" "),_("li",[_("p",[t._v("美国某公司与中国某企业谈技术合作，合同约定使用 l 项美国专利（获得批准并在有效期内），该项技术未在中国和其他国家申请专利。依照该专利生产的产品"),_("font",{attrs:{color:"#f00"}},[t._v("在中国销售，中国企业不")]),t._v("需要向美国公司支付这件美国专利的许可使用费。")],1),t._v(" "),t._m(5)]),t._v(" "),_("li",[_("p",[t._v("关于格式")]),t._v(" "),_("ul",[_("li",[_("font",{attrs:{color:"#f00"}},[t._v("WAV：声音文件格式")])],1),t._v(" "),_("li",[t._v("BMP：标准图像文件格式")]),t._v(" "),_("li",[t._v("MP3：音频压缩格式")]),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("MOV：Quick Time 影片格式，是一种音频、视频文件格式")])],1)])]),t._v(" "),_("li",[_("p",[t._v("关于编辑 \b 软件")]),t._v(" "),_("ul",[_("li",[t._v("PowerPiont：演示文稿软件 PPT")]),t._v(" "),_("li",[t._v("Premiere：视频编辑软件")]),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("Acrobat：PDF 编辑软件")])],1)])]),t._v(" "),t._m(6),t._v(" "),_("li",[_("p",[t._v("在结构化分析中，用数据流图描述"),_("font",{attrs:{color:"#f00"}},[t._v("数据在系统中如何被传送或变换，以及如何对数据流进行变换的功能或子功能，用于对功能建模")]),t._v("。当采用数据流图对一个图书馆管理系统进行分析时，"),_("font",{attrs:{color:"#f00"}},[t._v("读者")]),t._v("是一个外部实体")],1)]),t._v(" "),_("li",[_("p",[t._v("软件开发过程中，"),_("font",{attrs:{color:"#f00"}},[t._v("软件体系结构图")]),t._v("属于概要设计阶段的工作内容")],1)]),t._v(" "),_("li",[_("p",[t._v("软件开发过程中，"),_("font",{attrs:{color:"#f00"}},[t._v("数据字典、流图、实体联系图")]),t._v("属于需求分析阶段的输出")],1)]),t._v(" "),_("li",[_("p",[t._v("关于高级程序设计语言实现的编译和解释方式的叙述，"),_("font",{attrs:{color:"#f00"}},[t._v("编译程序不参与用户程序的运行控制，而解释程序参与")])],1),t._v(" "),t._m(7)]),t._v(" "),_("li",[_("p",[t._v("脚本语言主要采用"),_("font",{attrs:{color:"#f00"}},[t._v("解释方式")]),t._v("实现而非编译")],1)]),t._v(" "),_("li",[_("p",[t._v("中间代码的表达形式有"),_("font",{attrs:{color:"#f00"}},[t._v("语法树，后缀式，三地址代码")])],1),t._v(" "),t._m(8)]),t._v(" "),_("li",[_("p",[t._v("当用户通过键盘或鼠标进入某应用系统时，通常最先获得键盘或鼠标输入信息的是"),_("font",{attrs:{color:"#f00"}},[t._v("中断处理")]),t._v("程序。")],1),t._v(" "),t._m(9)]),t._v(" "),_("li",[_("p",[t._v("在 Windows 操作系统中，当用户双击“IMG_20160122_103.jpg”文件名时，系统会自动通过建立的"),_("font",{attrs:{color:"#f00"}},[t._v("文件关联")]),t._v("来决定使用什么程序打开该图像文件。")],1),t._v(" "),t._m(10)]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),_("li",[_("p",[t._v("耦合 \b 类型：")]),t._v(" "),_("ul",[t._m(13),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("公共耦合：若一组模块都访问同一个公共数据环境，则它们之间的耦合就称为公共耦合。公共的数据环境可以是全局数据结构、共享的通信区、内存的公共覆盖区等")])],1),t._v(" "),_("li",[t._v("外部耦合：一组模块都访问同一全局简单变量而不是同一全局数据结构，而且不是通过参数表传递该全局变量的信息，则称之为外部耦合")]),t._v(" "),_("li",[t._v("控制耦合：如果一个模块通过传送开关、标志、名字等控制信息，明显地控制选择另一模块的功能，就是控制耦合")]),t._v(" "),_("li",[t._v("标记耦合：一组模块通过参数表传递记录信息，就是标记耦合。这个记录是某一数据结构的子结构，而不是简单变量")]),t._v(" "),_("li",[t._v("数据耦合：一个模块访问另一个模块时，彼此之间是通过简单数据参数 (不是控制参数、公共数据结构或外部变量) 来交换输入、输出信息的")]),t._v(" "),_("li",[t._v("非直接耦合：两个模块之间没有直接关系，它们之间的联系完全是通过主模块的控制和调用来实现的")])])]),t._v(" "),_("li",[_("p",[t._v("在设计软件的模块结构时，"),_("font",{attrs:{color:"#f00"}},[t._v("模块的功能越单纯越好不能")]),t._v("改进设计质量")],1)]),t._v(" "),_("li",[_("p",[t._v("软件体系结构的各种风格中，仓库风格：")]),t._v(" "),_("ul",[t._m(14),t._v(" "),_("li",[t._v("缺点\n"),_("ul",[_("li",[_("font",{attrs:{color:"#f00"}},[t._v("测试困难")])],1),t._v(" "),_("li",[t._v("不能保证有好的求解方案")]),t._v(" "),_("li",[t._v("效率低")]),t._v(" "),_("li",[t._v("开发成本高")]),t._v(" "),_("li",[t._v("缺少对并行机的支持")])])]),t._v(" "),t._m(15),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("编译器 \b")]),t._v("不属于仓库风格")],1)])]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),_("li",[_("p",[t._v("在面向对象方法中，"),_("font",{attrs:{color:"#f00"}},[t._v("继承")]),t._v("是父类和子类之间共享数据和方法的机制。子类在原有父类接口的基础上，用适合于自己要求的实现去置换父类中的相应实现称为"),_("font",{attrs:{color:"#f00"}},[t._v("覆盖")]),t._v("。")],1),t._v(" "),t._m(18)]),t._v(" "),_("li",[_("p",[t._v("在 UML 用例图中，参与者表示"),_("font",{attrs:{color:"#f00"}},[t._v("人、硬件或其他系统可以扮演的角色")])],1),t._v(" "),t._m(19)]),t._v(" "),_("li",[_("p",[t._v("UML 中关联是一个结构关系，描述了一组链。两个类之间"),_("font",{attrs:{color:"#f00"}},[t._v("可以有多个由不同角色标识的")]),t._v("关联")],1)]),t._v(" "),t._m(20),t._v(" "),_("li",[_("p",[t._v("为图形用户界面（GUI）组件定义不同平台的并行类层次结构，适合采用"),_("font",{attrs:{color:"#f00"}},[t._v("外观")]),t._v("模式")],1),t._v(" "),t._m(21)]),t._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#f00"}},[t._v("命令")]),t._v("设计模式将一个请求封装成一个对象，从而使得可以用不同的请求参数化，队请求派对活记录请求日志，以及支持可撤销的操作")],1)]),t._v(" "),_("li",[_("p",[t._v("\b"),_("font",{attrs:{color:"#f00"}},[t._v("观察者")]),t._v("设计模式最适合用于发布/订阅消息模型，即当订阅者注册一个主题后，此主题有新消息到来时订阅者 \b 就会收到通知")],1),t._v(" "),t._m(22)]),t._v(" "),_("li",[_("p",[t._v("因使用大量的对象而造成很大的存储开销时，适合采用"),_("font",{attrs:{color:"#f00"}},[t._v("享元")]),t._v("模式进行对象共享，以减少对象数量从而达到较少的内存占用并提升性能")],1),t._v(" "),t._m(23)]),t._v(" "),_("li",[_("p",[t._v("移进-归约分析法是编译程序（或解释程序）对高级语言源程序进行语法分析的一种方法，属于"),_("font",{attrs:{color:"#f00"}},[t._v("自底向上（或自下而上）")]),t._v("的语法分析方法")],1)]),t._v(" "),t._m(24),t._v(" "),_("li",[_("p",[t._v("数据的物理独立性和逻辑独立性分别是通过修改"),_("font",{attrs:{color:"#f00"}},[t._v("模式与内模式之间的映像、外模式与模式之间的映像")]),t._v("来完成的")],1),t._v(" "),t._m(25)]),t._v(" "),_("li",[_("p",[t._v("关系规范化在数据库设计的"),_("font",{attrs:{color:"#f00"}},[t._v("逻辑设计")]),t._v("阶段进行")],1),t._v(" "),t._m(26)]),t._v(" "),_("li",[_("p",[t._v("若给定的关系模式为 R，U={A,B,C}，F = {AB→C,C→B}，则关系 R（ ）。")]),t._v(" "),t._m(27),_("p",[_("img",{attrs:{src:e(221),alt:"关系图"}}),_("br"),t._v("\n关系 R "),_("font",{attrs:{color:"#f00"}},[t._v("候选关键字有 AB 和 AC，有 A、B、C 三个主属性")])],1)]),t._v(" "),t._m(28),t._v(" "),_("li",[_("p",[t._v("默认情况下，FTP 服务器的控制端口为"),_("font",{attrs:{color:"#f00"}},[t._v("21")]),t._v("，上传文件时的端口为"),_("font",{attrs:{color:"#f00"}},[t._v("20")])],1),t._v(" "),t._m(29)]),t._v(" "),_("li",[_("p",[t._v("使用 ping 命令可以进行网络检测，在进行一系列检测时，按照由近及远原则,首先执行的是"),_("font",{attrs:{color:"#f00"}},[t._v("ping127.0.0.1")])],1),t._v(" "),t._m(30)]),t._v(" "),t._m(31),t._v(" "),_("li",[_("p",[t._v("在程序运行过程中，CPU 需要将指令从内存中取出并加以分析和执行。CPU 依据"),_("font",{attrs:{color:"#f00"}},[t._v("指令周期的不同阶段")]),t._v("来区分在内存中以二进制编码形式存放的指令和数据")],1),t._v(" "),t._m(32)]),t._v(" "),_("li",[_("p",[t._v("计算机在一个指令周期的过程中，为从内存读取指令操作码，首先要将"),_("font",{attrs:{color:"#f00"}},[t._v("程序计数器（PC）")]),t._v("的内容送到地址总线上。")],1),t._v(" "),t._m(33)]),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),_("li",[_("p",[t._v("在程序的执行过程中，Cache 与主存的地址映射是由"),_("font",{attrs:{color:"#f00"}},[t._v("硬件自动完成")]),t._v("的")],1)]),t._v(" "),t._m(37),t._v(" "),_("li",[_("p",[t._v("在网络设计和实施过程中要采取多种安全措施，其中"),_("font",{attrs:{color:"#f00"}},[t._v("漏洞发现与补丁管理")]),t._v("是针对系统安全需求的措施")],1)]),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),_("li",[_("p",[t._v("在 FM 方式的数字音乐合成器中，改变数字载波频率可以改变乐音的"),_("font",{attrs:{color:"#f00"}},[t._v("音调")]),t._v("，改变它的信号幅度可以改变乐音的"),_("font",{attrs:{color:"#f00"}},[t._v("音高")])],1)]),t._v(" "),_("li",[_("p",[t._v("关于结构化开发方法：")]),t._v(" "),_("ul",[_("li",[t._v("体系结构设计：主要是指要开发的系统中包含哪些部件，这些部件与部件之间的关系就是体系结构的设计。")]),t._v(" "),_("li",[t._v("数据设计：也称为数据库设计，主要包含数据库的设计和这个数据所包含的核心表的设计。")]),t._v(" "),_("li",[t._v("接口设计：用于子系统和模块之间或者内部系统和外部系统之间的各种交互，如功能描述，输入输出的定义，错误处理的设计。")]),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("过程设计：也称为模块详细设计，主要是详细模块的实现算法，以及模块所使用的数据结构。")])],1)])]),t._v(" "),_("li",[_("p",[t._v("关于敏捷开发方法：")]),t._v(" "),_("ul",[_("li",[t._v("极限编程 XP：近似螺旋的开发方法，把整个开发过程分解为相对比较小而简单的周期，通过大家积极的沟通反馈，开发人员和客户都比较清楚当前的开发进度、需要解决的问题等等，根据这些实际情况去调整开发过程，这是极限编程的思想")]),t._v(" "),_("li",[t._v("水晶法：不同的项目需要不同的开发方法，每—个不同的项目都需要一套不同的策略、约定和方法论（独立的水晶）")]),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("并列争球法：就是我们通常所说的 Scrum。Scurm 是一个增量、迭代的开发过程。产品团队总是先开发对客户具有较高价值的需求")])],1)])]),t._v(" "),t._m(41),t._v(" "),_("li",[_("p",[t._v("常用的函数参数传递方式有传值与传引用两种，"),_("font",{attrs:{color:"#f00"}},[t._v("在传引用方式下，修改形参实质上改变了实参的值")])],1),t._v(" "),t._m(42)]),t._v(" "),_("li",[_("p",[t._v("实时操作系统主要用于有实时要求的过程控制等领域。实时系统对于来自外部的事件"),_("font",{attrs:{color:"#f00"}},[t._v("必须在被控对象规定的时间内做出及时响应并对其进行处理。")])],1),t._v(" "),_("p",[t._v("实时操作系统是保证在一定时间限制内完成特定功能的操作系统。实时操作系统有硬实时和软实时之分。")]),t._v(" "),t._m(43)]),t._v(" "),t._m(44),t._v(" "),_("li",[_("p",[t._v("成本估算时，"),_("font",{attrs:{color:"#f00"}},[t._v("COCOMO Ⅱ")]),t._v("方法以规模作为成本的主要因素，考虑多个成本驱动因子。该方法包括三个阶段性模型，即应用组装模型、早期设计阶段模型和体系结构阶段模型。")],1)]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),_("li",[_("p",[t._v("MTBF ：称为平均故障间隔时间，用于衡量产品"),_("font",{attrs:{color:"#f00"}},[t._v("可靠性")]),t._v("的一个指标。可靠性：在规定的时间内，产品保持正常功能的一种能力。")],1)]),t._v(" "),_("li",[_("p",[t._v("如果一个模块的所有成分都操作同一数据集或生成同一数据集，则称为"),_("font",{attrs:{color:"#f00"}},[t._v("通信")]),t._v("内聚")],1)]),t._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#f00"}},[t._v("多态")]),t._v("实质上是将子类的指针对象或者引用对象传递给父类指针对象后，通过这个父类指针对象调用的函数（此函数在父类中声明为虚函数，且在各个子类中重写这个函数），不是父类中定义的，而是传递进来的子类对象中重写的函数。"),_("br"),t._v(" "),_("font",{attrs:{color:"#f00"}},[t._v("动态绑定")]),t._v("是实现多态的基础")],1)]),t._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#f00"}},[t._v("类图")]),t._v("是最常用的 UML 图，显示出类、接口以及它们之间的静态结构和关系；包含 3 个组成部分。类名、属性（attributes）、类提供的方法。类名不能省略，其他组成部分可以省略。对象图描述的是参与交互的各个对象在交互过程中某一时刻的状态。对象图可以被看作是类图在某一时刻的实例。")],1)]),t._v(" "),t._m(49),t._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#f00"}},[t._v("生成器模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。")]),t._v("实用范围：")],1),t._v(" "),t._m(50)]),t._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#f00"}},[t._v("上下文无关文法：")]),t._v("形式语言理论中一种重要的变换文法，用来描述上下文无关语言，在乔姆斯基分层中称为 2 型文法。由于程序设计语言的语法基本上都是上下文无关文法，因此应用十分广泛。")],1)]),t._v(" "),_("li",[_("p",[t._v("DMBS 是数据库管理系统，主要用来保证数据库的安全性和完整性。而 DBA 通过授权功能为不同用户授权，主要的目的是为了保证数据的"),_("font",{attrs:{color:"#f00"}},[t._v("安全性")])],1)]),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),_("li",[_("p",[t._v("某公司内部使用 wb.xyz.com.cn 作为访问某服务器的地址，其中 wb 是"),_("font",{attrs:{color:"#f00"}},[t._v("主机名")])],1),t._v(" "),t._m(53)]),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),_("li",[_("p",[t._v("Cache 的地址映像方式中，发生块冲突次数最小的是"),_("font",{attrs:{color:"#f00"}},[t._v("全相联映像")])],1),t._v(" "),t._m(57)]),t._v(" "),_("li",[_("p",[t._v("计算机中 CPU 的中断响应时间指的是"),_("font",{attrs:{color:"#f00"}},[t._v("从发出中断请求到开始进入中断处理")]),t._v("的时间")],1)]),t._v(" "),_("li",[_("p",[t._v("关于指令流水线性能度量：")]),t._v(" "),_("ul",[_("li",[_("font",{attrs:{color:"#f00"}},[t._v("流水线釆用异步控制并不会给流水线性能带来改善，反而会增加控制电路的复杂性")])],1),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("要使加速比和效率最大化应该对流水线各级采用相同的运行时间")])],1)])]),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),_("li",[_("p",[t._v("关于安全需求：")]),t._v(" "),_("ul",[_("li",[t._v("物理线路安全（机房安全...)")]),t._v(" "),_("li",[t._v("网络安全(入侵检测...）")]),t._v(" "),_("li",[t._v("系统安全(漏洞补丁管理...)")]),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("应用安全(数据库安全...)")])],1)])]),t._v(" "),t._m(60),t._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#f00"}},[t._v("感觉媒体指直接作用于人的感觉器官，使人产生直接感觉的媒体，如引起听觉反应的声音，引起视觉反应的图像等")])],1)]),t._v(" "),_("li",[_("p",[t._v("关于多媒体：")]),t._v(" "),_("ul",[_("li",[_("font",{attrs:{color:"#f00"}},[t._v("表现媒体是指进行信息输入和输出的媒体，如键盘、鼠标、话筒，以及显示器、打印机、_机")])],1),t._v(" "),_("li",[_("font",{attrs:{color:"#f00"}},[t._v("表示媒体指传输感觉媒体的中介媒体，即用于数据交换的编码，如图像编码、文本编码和声音编码等")])],1),t._v(" "),_("li",[t._v("传输媒体指传输表示媒体的物理介质，如电缆、光缆、电磁波等")]),t._v(" "),_("li",[t._v("存储媒体指用于存储表示媒体的物理介质，如硬盘、光盘等")])])]),t._v(" "),_("li",[_("p",[t._v("软件工程的基本要素包括"),_("font",{attrs:{color:"#f00"}},[t._v("方法、工具和过程")])],1)]),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),_("li",[_("p",[t._v("风险的优先级通常是根据"),_("font",{attrs:{color:"#f00"}},[t._v("风险暴露")]),t._v("设定")],1),t._v(" "),t._m(63)]),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),_("li",[_("p",[t._v("嵌入式系统初始化过程主要有 3 个环节，按照自底向上、从硬件到软件的次序依次为"),_("font",{attrs:{color:"#f00"}},[t._v("片级初始化 → 板级初始化 → 系统级初始化")]),t._v("。系统级初始化主要任务是"),_("font",{attrs:{color:"#f00"}},[t._v("以软件初始化为主，主要进行操作系统的初始化")])],1)]),t._v(" "),_("li",[_("p",[t._v("关于开发过程模型：")]),t._v(" "),_("ul",[_("li",[t._v("瀑布模型：将软件生存周期各个活动规定为线性顺序连接的若干阶段的模型，规定了由前至后，相互衔接的固定次序，如同瀑布流水，逐级下落。这种方法是一种理想的开发模式，缺乏灵活性，特别是无法解决软件需求不明确或不准确的问题")]),t._v(" "),_("li",[t._v("原型模型：从初始的原型逐步演化成最终软件产品，特别适用于对软件需求缺乏准确认识的情况。")]),t._v(" "),_("li",[t._v("增量开发：是把软件产品作为一系列的增量构件来设计、编码、集成和测试，可以在增量开发过程中逐步理解需求")]),t._v(" "),_("li",[t._v("螺旋：将瀑布模型与快速原型模型结合起来，并且加入两种模型均忽略了的"),_("font",{attrs:{color:"#f00"}},[t._v("风险分析")]),t._v("，适用于复杂的大型软件")],1)])]),t._v(" "),t._m(66),t._v(" "),_("li",[_("p",[t._v("自底向上的集成测试策略的优点包括"),_("font",{attrs:{color:"#f00"}},[t._v("不需要写桩程序")])],1)]),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#f00"}},[t._v("UML")]),t._v("是面向对象软件的标准化建模语言，由三个要素构成：UML 的基本构造块、支配这些构造块如何放置在一起的规则和运用与整个语言的一些公共机制。UML 的词汇表包含三种构造块：事物、关系和图。事物是对模型中最具有代表性的成分的抽象；关系把事物结合在一起；图聚集了相关的事物。其中关系包括 4 种：依赖、关联、泛化和实现。")],1),t._v(" "),t._m(69)]),t._v(" "),_("li",[_("p",[t._v("对高级语言源程序进行编译（或解释）方式的翻译过程中，"),_("font",{attrs:{color:"#f00"}},[t._v("语法分析")]),t._v("的任务是根据语言的语法规则，分析单词串是否构成短语和句子，即表达式、语句和程序等基本语言结构，同时检查和处理程序中的语法错误。"),_("br"),t._v("\n程序设计语言的绝大多数语法规则可以采用上下文无关文法进行描述。语法分析方法有多种，根据产生语法树的方向，可分为自底向上和自顶向下两类。递归下降分析法和预测分析法是常用的自顶向下分析法。算符优先分析法和 LR 分析法属于自底向上的语法分析方法。")],1)]),t._v(" "),_("li",[_("p",[t._v("给定关系模式 R(A1，A2，A3，A4)上的函数依赖集 F={A1A3->A2,A2->A3}。若将 R 分解为 p ={( A1,A2),( A1,A3)}，则该分解是"),_("font",{attrs:{color:"#f00"}},[t._v("有损联接且不保持函数依赖的")])],1),t._v(" "),t._m(70),t._v(" "),t._m(71)])])])},_,!1,null,null,null);s.default=i.exports}}]);